buildscript {
	ext {
		springBootVersion = '3.2.7'
		dependencyManagementVersion = '1.1.5'
		springDocVersion = '2.1.0'
		springCloudVersion = '2023.0.0'  // Updated to match Spring Boot 3.2.x
		lombokVersion = '1.18.30'  // Updated to latest stable
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}")
	}
}

allprojects {
	group = 'com.service'
	version = '0.0.1-SNAPSHOT'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = '17'

	repositories {
		mavenCentral()
		maven { url "https://packages.confluent.io/maven" }
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		// Spring Boot starters
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation('org.springframework.boot:spring-boot-starter-web') {
			exclude module: 'spring-boot-starter-tomcat'
		}
		implementation 'org.springframework.boot:spring-boot-starter-undertow'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'

		// spring security
		implementation 'org.springframework.boot:spring-boot-starter-security'

		// Spring Cloud
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

		// Swagger
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
		implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'

		// Lombok
		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

		// Utils
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'commons-codec:commons-codec:1.15'
		implementation 'com.googlecode.json-simple:json-simple:1.1.1'
		implementation 'org.modelmapper:modelmapper:2.4.0'

		// Spring Boot Test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// JUnit 5
		testImplementation 'org.junit.jupiter:junit-jupiter-api'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

		// Mockito
		testImplementation 'org.mockito:mockito-core'
		testImplementation 'org.mockito:mockito-junit-jupiter'

		// Other
		implementation 'javax.persistence:javax.persistence-api:2.2'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

		// jackson
		implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
		implementation 'com.fasterxml.jackson.core:jackson-core:2.15.3'
		implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.3'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.15.3'


		// jwt
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		implementation 'org.springframework.security:spring-security-config'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

		// redis
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	}

	test {
		useJUnitPlatform()
	}
}

project(':core') {
	bootJar { enabled = false }
	jar { enabled = true }
}

project(':domain-database') {
	bootJar { enabled = false }
	jar { enabled = true }
	dependencies {
		implementation project(':core')
	}
}

project(':domain-redis') {
	bootJar { enabled = false }
	jar { enabled = true }
	dependencies {
		implementation project(':core')
	}
}

project(':app-service') {
	dependencies {
		implementation project(':core')
		implementation project(':domain-database')
		implementation project(':domain-redis')
	}
}